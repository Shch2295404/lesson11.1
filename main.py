import asyncio
import random
import aiohttp
from aiogram import Bot, Dispatcher, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message
from config import TOKEN, WEATHER_API_KEY

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TOKEN)
dp = Dispatcher()

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏ –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
async def fetch_weather(city: str, max_attempts: int = 3):
    url = f"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={WEATHER_API_KEY}&units=metric&lang=ru"
    for attempt in range(max_attempts):
        try:
            async with aiohttp.ClientSession() as session:
                async with session.get(url) as response:
                    if response.status == 200:
                        data = await response.json()
                        weather_desc = data['weather'][0]['description']
                        temperature = data['main']['temp']
                        feels_like = data['main']['feels_like']
                        return (f"üå¶ –ü–æ–≥–æ–¥–∞ –≤ {city}:\n"
                                f"‚òÅÔ∏è –°–æ—Å—Ç–æ—è–Ω–∏–µ: {weather_desc}\n"
                                f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temperature}¬∞C\n"
                                f"ü•∂ –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {feels_like}¬∞C")
                    else:
                        return f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞. (–ö–æ–¥ –æ—à–∏–±–∫–∏: {response.status})"
        except aiohttp.ClientOSError as e:
            if attempt < max_attempts - 1:
                await asyncio.sleep(2)  # –û–∂–∏–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–¥ –Ω–æ–≤–æ–π –ø–æ–ø—ã—Ç–∫–æ–π
            else:
                return f"üîå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {str(e)}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(CommandStart())
async def command_start(message: Message):
    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É.\n"
                         "üîπ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /weather <–≥–æ—Ä–æ–¥>, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
@dp.message(Command("help"))
async def command_help(message: Message):
    await message.answer("üÜò –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:\n"
                         "/start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞\n"
                         "/photo - –ü–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ\n"
                         "/weather <–≥–æ—Ä–æ–¥> - –£–∑–Ω–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã\n"
                         "/help - –°–ø—Ä–∞–≤–∫–∞")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /photo
@dp.message(Command("photo"))
async def command_photo(message: Message):
    image_links = [
        "https://kartin.papik.pro/uploads/posts/2023-07/1689295122_kartin-papik-pro-p-kartinki-anomalii-pogodi-10.jpg",
        "https://kartin.papik.pro/uploads/posts/2023-07/1689295125_kartin-papik-pro-p-kartinki-anomalii-pogodi-19.jpg",
        "https://kartin.papik.pro/uploads/posts/2023-07/1689295133_kartin-papik-pro-p-kartinki-anomalii-pogodi-46.jpg",
        "https://kartin.papik.pro/uploads/posts/2023-07/1689295124_kartin-papik-pro-p-kartinki-anomalii-pogodi-18.jpg",
        "https://kartin.papik.pro/uploads/posts/2023-07/1689295127_kartin-papik-pro-p-kartinki-anomalii-pogodi-33.jpg"
    ]
    chosen_photo = random.choice(image_links)
    await message.answer_photo(photo=chosen_photo, caption="üì∏ –°–ª—É—á–∞–π–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ!")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /weather
@dp.message(Command("weather"))
async def command_weather(message: Message):
    args = message.text.split(maxsplit=1)
    if len(args) < 2:
        await message.answer("‚ùó –£–∫–∞–∂–∏—Ç–µ –≥–æ—Ä–æ–¥. –ü—Ä–∏–º–µ—Ä: /weather –ú–æ—Å–∫–≤–∞")
    else:
        city = args[1]
        weather_data = await fetch_weather(city)
        await message.answer(weather_data)

# –†–µ–∞–∫—Ü–∏—è –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ "–ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã"
@dp.message(F.text.lower() == "–ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã")
async def weather_info(message: Message):
    await message.answer("üåç –í—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –ª—é–±–æ–º –≥–æ—Ä–æ–¥–µ! –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É:\n"
                         "`/weather <–≥–æ—Ä–æ–¥>` (–Ω–∞–ø—Ä–∏–º–µ—Ä: `/weather –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥`).")

# –û—Ç–≤–µ—Ç –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
@dp.message(F.photo)
async def photo_reaction(message: Message):
    await message.answer("üé® –û—Ç–ª–∏—á–Ω—ã–π —Å–Ω–∏–º–æ–∫! üòä")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
